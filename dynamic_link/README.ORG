* 前言
  为了使程序方便扩展，具备通用性，可以采用插件形式。采用异步事件驱动模型，
  保证主程序逻辑不变，将各个业务已动态链接库的形式加载进来，这就是所谓的插件。
  linux提供了加载和处理动态链接库的系统调用，非常方便。本文先从使用上进行总结，
  涉及到基本的操作方法，关于动态链接库的本质及如何加载进来，(需要进一步学习)后续继续补充。
  如何将程序设计为插件形式，挖掘出主题和业务之间的关系(需要进一步去学习)。
* 生产动态链接库
** 编译参数 gcc -fPIC -shared 
* dlopen、dlerror、dlsym、dlclose函数介绍
** dlopen以指定模式打开指定的动态连接库文件，并返回一个句柄给调用进程，
    dlopen打开模式如下：  
    RTLD_LAZY 暂缓决定，等有需要时再解出符号。
    RTLD_NOW 立即决定，返回前解除所有未决定的符号。
** dlerror返回出现的错误，dlsym通过句柄和连接符名称获取函数名或者变量名，
** dlsym
** dlclose来卸载打开的库。
* 主程序的动态连接
** 编译参数 gcc -rdynamic -o main main.c -ldl
   选项 -rdynamic 用来通知链接器将所有符号添加到动态符号表中。
   （目的是能够通过使用 dlopen 来实现向后跟踪）
